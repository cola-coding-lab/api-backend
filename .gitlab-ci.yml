stages:          # List of stages for jobs, and their order of execution
#  - build
#  - test
  - deploy

## https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#docker-in-docker-with-tls-disabled-in-the-docker-executor
variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""

services:
  - docker:20.10.17-dind

before_script:
  - docker info


.prepare:
  variables:
    GIT_STRATEGY: none
  before_script:
    - 'which ssh-agent || ( apk update && apk add openssh )'
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - 'which git || ( apk update && apk add git )'
    - |
      if [ ! -d "${CI_PROJECT_DIR}/.git" ]
      then
          echo "inside IF ... ${CI_PROJECT_DIR}"
          mkdir -p "${CI_PROJECT_DIR}"
          cd "${CI_PROJECT_DIR}"
          git init
          git remote add origin "ssh://git@${CI_SERVER_HOST}/${CI_PROJECT_PATH}.git"
      fi
    - cd "${CI_PROJECT_DIR}"
    - git fetch origin
    - git checkout "${CI_COMMIT_SHA}"
    - git reset --hard HEAD
    - git clean -ffdx


deploy:      # This job runs in the deploy stage.
  image: docker:20.10.14
  extends: .prepare
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  after_script:
    - docker logout $REGISTRY_URL
  script:
    - echo "Deploying application..."
    - ls
    - docker login $REGISTRY_URL -u $REGISTRY_USER -p $REGISTRY_PASS
    - docker build . -t $REGISTRY_URL/vcl-api:latest
    - docker push $REGISTRY_URL/vcl-api:latest
    - echo "Application successfully deployed."
